{
  "openapi" : "3.0.2",
  "info" : {
    "contact" : {
      "url" : "https://support.mongodb.com/help"
    },
    "description" : "OpenAPI specification for MongoDB Relational Migrator tool",
    "title" : "MongoDB Relational Migrator REST API",
    "version" : "1.10.0"
  },
  "servers" : [ {
    "url" : "http://127.0.0.1:8278/api/v1"
  } ],
  "tags" : [ {
    "description" : "Generates an analysis report for an app to be migrated",
    "name" : "Analysis"
  }, {
    "description" : "MongoDB Atlas endpoints",
    "name" : "Atlas"
  }, {
    "description" : "Code generation based on project mappings",
    "name" : "Codegen"
  }, {
    "description" : "Defines global connections (eg. JDBC and MongoDB)",
    "name" : "Connections"
  }, {
    "description" : "Tests connectivity for relational, mongodb and environment setup",
    "name" : "Connectivity"
  }, {
    "description" : "Provides information about environment setup",
    "name" : "Info"
  }, {
    "description" : "Data migration",
    "name" : "Job"
  }, {
    "description" : "Captures relational schemas and mappings",
    "name" : "Project"
  }, {
    "description" : "Query conversion",
    "name" : "Query"
  }, {
    "description" : "Analyses and captures relational schemas",
    "name" : "Schema"
  }, {
    "description" : "Global settings",
    "name" : "Settings"
  }, {
    "description" : "Private internal endpoints for testing",
    "name" : "Internal"
  }, {
    "description" : "Provides details of the current authenticated user",
    "name" : "User"
  }, {
    "description" : "Verification of data migration",
    "name" : "Verification"
  } ],
  "paths" : {
    "/analysis/{projectId}/task" : {
      "get" : {
        "description" : "Fetches a task for an analysis task by projectId.",
        "operationId" : "getAnalysisTask",
        "parameters" : [ {
          "description" : "Project ID",
          "in" : "path",
          "name" : "projectId",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/id"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/analysis-task"
                }
              }
            },
            "description" : "OK"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error-response"
                }
              }
            },
            "description" : "Not found"
          }
        },
        "tags" : [ "Analysis" ]
      },
      "post" : {
        "description" : "Creates a task for an analysis to be run",
        "operationId" : "createAnalysisTask",
        "parameters" : [ {
          "description" : "Project ID",
          "in" : "path",
          "name" : "projectId",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/id"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/analysis-task-create-request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/analysis-task"
                }
              }
            },
            "description" : "OK"
          },
          "433" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error-response"
                }
              }
            },
            "description" : "Trouble connecting to SQL database with provided information"
          }
        },
        "tags" : [ "Analysis" ]
      }
    },
    "/analysis/{projectId}/task/cancel" : {
      "post" : {
        "description" : "Attempts to cancel a running analysis task.",
        "operationId" : "cancelAnalysisTask",
        "parameters" : [ {
          "description" : "Project ID",
          "in" : "path",
          "name" : "projectId",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/id"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/analysis-task"
                }
              }
            },
            "description" : "OK"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error-response"
                }
              }
            },
            "description" : "Not found"
          },
          "498" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error-response"
                }
              }
            },
            "description" : "Analysis Task could not be cancelled."
          }
        },
        "tags" : [ "Analysis" ]
      }
    },
    "/analysis/{projectId}/report" : {
      "get" : {
        "description" : "Fetches an analysis report",
        "operationId" : "getReport",
        "parameters" : [ {
          "description" : "Project ID",
          "in" : "path",
          "name" : "projectId",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/id"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/analysis-report"
                }
              }
            },
            "description" : "OK"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error-response"
                }
              }
            },
            "description" : "Not found"
          }
        },
        "tags" : [ "Analysis" ]
      }
    },
    "/atlas/cluster" : {
      "get" : {
        "description" : "Gets the currently authenticated user's clusters",
        "operationId" : "getClustersSummary",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/user-clusters"
                }
              }
            },
            "description" : "OK"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error-response"
                }
              }
            },
            "description" : "The user is not currently authenticated"
          }
        },
        "tags" : [ "Atlas" ]
      }
    },
    "/atlas/cluster/detail" : {
      "post" : {
        "description" : "Get a cluster from a project",
        "operationId" : "getClusterDetail",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/user-cluster-detail-request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/user-cluster-detail"
                }
              }
            },
            "description" : "OK"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error-response"
                }
              }
            },
            "description" : "The user is not currently authenticated"
          }
        },
        "tags" : [ "Atlas" ]
      }
    },
    "/connections/jdbc" : {
      "get" : {
        "description" : "Get a list of JDBC connections",
        "operationId" : "getJDBCConnections",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/connections-jdbc-extended"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "OK"
          }
        },
        "tags" : [ "Connections" ]
      },
      "post" : {
        "description" : "Create a new JDBC connection",
        "operationId" : "createJDBCConnection",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/connections-jdbc-request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/connections-jdbc-extended"
                }
              }
            },
            "description" : "OK"
          }
        },
        "tags" : [ "Connections" ]
      }
    },
    "/connections/jdbc/{jdbcId}" : {
      "delete" : {
        "description" : "Delete the JDBC connection by ID",
        "operationId" : "deleteJDBCConnection",
        "parameters" : [ {
          "description" : "JDBC ID",
          "in" : "path",
          "name" : "jdbcId",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/id"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "OK"
          }
        },
        "tags" : [ "Connections" ]
      },
      "get" : {
        "description" : "Get the JDBC connection by ID",
        "operationId" : "getJDBCConnection",
        "parameters" : [ {
          "description" : "JDBC ID",
          "in" : "path",
          "name" : "jdbcId",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/id"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/connections-jdbc-extended"
                }
              }
            },
            "description" : "OK"
          }
        },
        "tags" : [ "Connections" ]
      },
      "put" : {
        "description" : "Update the JDBC connection by ID",
        "operationId" : "updateJDBCConnection",
        "parameters" : [ {
          "description" : "JDBC ID",
          "in" : "path",
          "name" : "jdbcId",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/id"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/connections-jdbc-request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/connections-jdbc-extended"
                }
              }
            },
            "description" : "OK"
          }
        },
        "tags" : [ "Connections" ]
      }
    },
    "/connections/mongodb" : {
      "get" : {
        "description" : "Get a list of JDBC connections",
        "operationId" : "getMongoDBConnections",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/connections-mongodb-extended"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "OK"
          }
        },
        "tags" : [ "Connections" ]
      },
      "post" : {
        "description" : "Create a new MongoDB connection",
        "operationId" : "createMongoDBConnection",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/connections-mongodb-request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/connections-mongodb-extended"
                }
              }
            },
            "description" : "OK"
          }
        },
        "tags" : [ "Connections" ]
      }
    },
    "/connections/mongodb/{mongodbId}" : {
      "delete" : {
        "description" : "Delete the MongoDB connection by ID",
        "operationId" : "deleteMongoDBConnection",
        "parameters" : [ {
          "description" : "MongoDB ID",
          "in" : "path",
          "name" : "mongodbId",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/id"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "OK"
          }
        },
        "tags" : [ "Connections" ]
      },
      "get" : {
        "description" : "Get the MongoDB connection by ID",
        "operationId" : "getMongoDBConnection",
        "parameters" : [ {
          "description" : "MongoDB ID",
          "in" : "path",
          "name" : "mongodbId",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/id"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/connections-mongodb-extended"
                }
              }
            },
            "description" : "OK"
          }
        },
        "tags" : [ "Connections" ]
      },
      "put" : {
        "description" : "Update the MongoDB connection by ID",
        "operationId" : "updateMongoDBConnection",
        "parameters" : [ {
          "description" : "MongoDB ID",
          "in" : "path",
          "name" : "mongodbId",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/id"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/connections-mongodb-request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/connections-mongodb-extended"
                }
              }
            },
            "description" : "OK"
          }
        },
        "tags" : [ "Connections" ]
      }
    },
    "/connectivity/jdbc" : {
      "post" : {
        "description" : "Test connection of jdbc",
        "operationId" : "connectivityJdbc",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/jdbc-connection-details"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "OK"
          },
          "433" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error-response"
                }
              }
            },
            "description" : "Trouble connecting to SQL database with provided information"
          },
          "472" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error-response"
                }
              }
            },
            "description" : "Invalid schema attributes within request"
          }
        },
        "tags" : [ "Connectivity" ]
      }
    },
    "/connectivity/mongodb" : {
      "post" : {
        "description" : "Test connection of MongoDB",
        "operationId" : "connectivityMongodb",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mongodb-connection-details"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "OK"
          },
          "440" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error-response"
                }
              }
            },
            "description" : "Invalid as connection string did not contain a database name"
          },
          "441" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error-response"
                }
              }
            },
            "description" : "Trouble connecting to MongoDB with provided information"
          },
          "442" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error-response"
                }
              }
            },
            "description" : "Target database does not support time series collections"
          }
        },
        "tags" : [ "Connectivity" ]
      }
    },
    "/connectivity/environment" : {
      "get" : {
        "description" : "Test environment connectivity",
        "operationId" : "connectivityEnvironment",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/connectivity-environment"
                }
              }
            },
            "description" : "ok"
          }
        },
        "tags" : [ "Connectivity" ]
      }
    },
    "/info" : {
      "get" : {
        "description" : "Get info",
        "operationId" : "getInfo",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/info"
                }
              }
            },
            "description" : "OK"
          }
        },
        "tags" : [ "Info" ]
      }
    },
    "/jobs" : {
      "get" : {
        "description" : "Get all migration jobs",
        "operationId" : "getJobs",
        "parameters" : [ {
          "description" : "Order in which to retrieve the results",
          "example" : "submittedAt,DESC",
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "default" : "submittedAt,DESC",
            "pattern" : "^\\w+,(DESC|ASC)$",
            "type" : "string"
          }
        }, {
          "description" : "Limit the results",
          "example" : 20,
          "in" : "query",
          "name" : "limit",
          "required" : false,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "Filter jobs to only of a specific job type",
          "example" : "IN_PROGRESS",
          "in" : "query",
          "name" : "type",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/migration-jobs-get-type"
          }
        }, {
          "description" : "Filter jobs by projectId",
          "in" : "query",
          "name" : "projectId",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/id"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/migration-job-status"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "OK"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error-response"
                }
              }
            },
            "description" : "Internal server error"
          }
        },
        "tags" : [ "Job" ]
      },
      "post" : {
        "description" : "Post a new migration job",
        "operationId" : "createJob",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/post-migration-job-request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/migration-job-status"
                }
              }
            },
            "description" : "OK"
          },
          "440" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error-response"
                }
              }
            },
            "description" : "Invalid as connection string did not contain a database name"
          },
          "470" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error-response"
                }
              }
            },
            "description" : "Migration job already running"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error-response"
                }
              }
            },
            "description" : "Internal server error"
          }
        },
        "tags" : [ "Job" ]
      }
    },
    "/jobs/{jobId}" : {
      "get" : {
        "description" : "Get the status of a migration job by ID",
        "operationId" : "getJob",
        "parameters" : [ {
          "description" : "Job ID",
          "in" : "path",
          "name" : "jobId",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/id"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/migration-job-status"
                }
              }
            },
            "description" : "OK"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error-response"
                }
              }
            },
            "description" : "Not found"
          }
        },
        "tags" : [ "Job" ]
      }
    },
    "/jobs/{jobId}/pause" : {
      "post" : {
        "description" : "Pause a running migration job",
        "operationId" : "pauseJob",
        "parameters" : [ {
          "description" : "Job ID",
          "in" : "path",
          "name" : "jobId",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/id"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/migration-job-status"
                }
              }
            },
            "description" : "OK"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error-response"
                }
              }
            },
            "description" : "Not found"
          },
          "465" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error-response"
                }
              }
            },
            "description" : "Migration job not paused"
          }
        },
        "tags" : [ "Job" ]
      }
    },
    "/jobs/{jobId}/resume" : {
      "post" : {
        "description" : "Resume a paused migration job",
        "operationId" : "resumeJob",
        "parameters" : [ {
          "description" : "Job ID",
          "in" : "path",
          "name" : "jobId",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/id"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/migration-job-status"
                }
              }
            },
            "description" : "OK"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error-response"
                }
              }
            },
            "description" : "Not found"
          },
          "466" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error-response"
                }
              }
            },
            "description" : "Migration job could not be resumed"
          }
        },
        "tags" : [ "Job" ]
      }
    },
    "/jobs/{jobId}/retry" : {
      "post" : {
        "description" : "Retry a failed migration job. Currently only CDC failures are retryable",
        "operationId" : "retryJob",
        "parameters" : [ {
          "description" : "Job ID",
          "in" : "path",
          "name" : "jobId",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/id"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/post-migration-job-request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/migration-job-status"
                }
              }
            },
            "description" : "OK"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error-response"
                }
              }
            },
            "description" : "Not found"
          }
        },
        "tags" : [ "Job" ]
      }
    },
    "/jobs/{jobId}/stop" : {
      "post" : {
        "description" : "Stop a running migration job",
        "operationId" : "stopJob",
        "parameters" : [ {
          "description" : "Job ID",
          "in" : "path",
          "name" : "jobId",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/id"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/migration-job-status"
                }
              }
            },
            "description" : "OK"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error-response"
                }
              }
            },
            "description" : "Not found"
          }
        },
        "tags" : [ "Job" ]
      }
    },
    "/me" : {
      "get" : {
        "description" : "Gets the currently authenticated user",
        "operationId" : "getCurrentUser",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/user"
                }
              }
            },
            "description" : "OK"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error-response"
                }
              }
            },
            "description" : "The user is not currently authenticated"
          }
        },
        "tags" : [ "User" ]
      }
    },
    "/project" : {
      "get" : {
        "description" : "Get all projects",
        "operationId" : "getProjects",
        "parameters" : [ {
          "description" : "Order in which to retrieve the results",
          "example" : "lastModified,DESC",
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "default" : "lastModified,DESC",
            "pattern" : "^\\w+,(DESC|ASC)$",
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/project-descriptor-summary"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "OK"
          }
        },
        "tags" : [ "Project" ]
      },
      "post" : {
        "description" : "Create a new project",
        "operationId" : "createProject",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/project-descriptor-create-request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProjectDescriptor"
                }
              }
            },
            "description" : "OK"
          }
        },
        "tags" : [ "Project" ]
      }
    },
    "/project/import" : {
      "post" : {
        "description" : "Imports a project from an export file",
        "operationId" : "importProject",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "additionalProperties" : true,
                "type" : "object"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProjectDescriptor"
                }
              }
            },
            "description" : "OK"
          },
          "485" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error-response"
                }
              }
            },
            "description" : "Unknown issue occurred during project import"
          },
          "486" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error-response"
                }
              }
            },
            "description" : "Field not found during project import"
          },
          "487" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error-response"
                }
              }
            },
            "description" : "Project version invalid during import"
          }
        },
        "tags" : [ "Project" ]
      }
    },
    "/project/{projectId}" : {
      "delete" : {
        "description" : "Delete a project by ID",
        "operationId" : "deleteProject",
        "parameters" : [ {
          "description" : "Project ID",
          "in" : "path",
          "name" : "projectId",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/id"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "OK"
          }
        },
        "tags" : [ "Project" ]
      },
      "get" : {
        "description" : "Get a project by ID",
        "operationId" : "getProject",
        "parameters" : [ {
          "description" : "Project ID",
          "in" : "path",
          "name" : "projectId",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/id"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProjectDescriptor"
                }
              }
            },
            "description" : "OK"
          }
        },
        "tags" : [ "Project" ]
      },
      "patch" : {
        "description" : "Patch an existing project",
        "operationId" : "patchProject",
        "parameters" : [ {
          "description" : "Project ID",
          "in" : "path",
          "name" : "projectId",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/id"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/project-descriptor-patch-request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProjectDescriptor"
                }
              }
            },
            "description" : "OK"
          }
        },
        "tags" : [ "Project" ]
      },
      "put" : {
        "description" : "Save an existing project",
        "operationId" : "updateProject",
        "parameters" : [ {
          "description" : "Project ID",
          "in" : "path",
          "name" : "projectId",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/id"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/project-descriptor-update-request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProjectDescriptor"
                }
              }
            },
            "description" : "OK"
          }
        },
        "tags" : [ "Project" ]
      }
    },
    "/project/{projectId}/codegen" : {
      "post" : {
        "description" : "Generate the code, the response will be a .zip folder",
        "operationId" : "downloadCodegenZip",
        "parameters" : [ {
          "description" : "Project ID",
          "in" : "path",
          "name" : "projectId",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/id"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/codegen-request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/zip" : {
                "schema" : {
                  "format" : "binary",
                  "type" : "string"
                }
              }
            },
            "description" : "OK"
          }
        },
        "tags" : [ "Codegen" ]
      }
    },
    "/project/{projectId}/codegen/generate" : {
      "post" : {
        "description" : "Generates application code based on your project's mapping rules and schema transformations",
        "operationId" : "generateCode",
        "parameters" : [ {
          "description" : "Project ID",
          "in" : "path",
          "name" : "projectId",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/id"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/codegen-request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/codegen-response"
                }
              }
            },
            "description" : "OK"
          }
        },
        "tags" : [ "Codegen" ]
      }
    },
    "/project/{projectId}/codegen/metadata" : {
      "get" : {
        "description" : "Gets the available languages and frameworks for code generation",
        "operationId" : "getCodegenMetadata",
        "parameters" : [ {
          "description" : "Project ID",
          "in" : "path",
          "name" : "projectId",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/id"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/codegen-metadata-response"
                }
              }
            },
            "description" : "OK"
          }
        },
        "tags" : [ "Codegen" ]
      }
    },
    "/project/{projectId}/diagnostic" : {
      "post" : {
        "description" : "Diagnostic dump including logs and project details",
        "operationId" : "diagnosticDumpProject",
        "parameters" : [ {
          "description" : "Project ID",
          "in" : "path",
          "name" : "projectId",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/id"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/zip" : {
                "schema" : {
                  "format" : "binary",
                  "type" : "string"
                }
              }
            },
            "description" : "OK"
          }
        },
        "tags" : [ "Project" ]
      }
    },
    "/project/{projectId}/export" : {
      "get" : {
        "description" : "Export an existing project",
        "operationId" : "exportProject",
        "parameters" : [ {
          "description" : "Project ID",
          "in" : "path",
          "name" : "projectId",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/id"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/export-file"
                }
              }
            },
            "description" : "OK"
          }
        },
        "tags" : [ "Project" ]
      }
    },
    "/project/{projectId}/job/preview" : {
      "post" : {
        "description" : "Get the job preview statistics, before a job is started",
        "operationId" : "getJobPreview",
        "parameters" : [ {
          "description" : "Project ID",
          "in" : "path",
          "name" : "projectId",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/id"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/jdbc-connection-details"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/migration-job-statistics-preview"
                }
              }
            },
            "description" : "OK"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error-response"
                }
              }
            },
            "description" : "Not found"
          },
          "478" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error-response"
                }
              }
            },
            "description" : "Migration preview statistics could not be fetched"
          }
        },
        "tags" : [ "Job" ]
      }
    },
    "/project/{projectId}/job/readiness" : {
      "post" : {
        "description" : "Check readiness of source database",
        "operationId" : "checkJobReadiness",
        "parameters" : [ {
          "description" : "Project ID",
          "in" : "path",
          "name" : "projectId",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/id"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/pre-migration-job-request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "Pre-flight check passed"
          },
          "476" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error-response"
                }
              }
            },
            "description" : "Pre-flight check failed"
          }
        },
        "tags" : [ "Job" ]
      }
    },
    "/project/{projectId}/job/script" : {
      "post" : {
        "description" : "Generate a pre-migration database script",
        "operationId" : "generateJobScript",
        "parameters" : [ {
          "description" : "Project ID",
          "in" : "path",
          "name" : "projectId",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/id"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/pre-migration-job-request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/sql" : {
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "description" : "OK"
          }
        },
        "tags" : [ "Job" ]
      }
    },
    "/project/{projectId}/queries" : {
      "get" : {
        "description" : "Get a summary of all queries related to a project",
        "operationId" : "getQueries",
        "parameters" : [ {
          "description" : "Project ID",
          "in" : "path",
          "name" : "projectId",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/id"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/query-descriptor-summary"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "OK"
          }
        },
        "tags" : [ "Query" ]
      },
      "post" : {
        "description" : "Create a new adhoc query",
        "operationId" : "createQuery",
        "parameters" : [ {
          "description" : "Project ID",
          "in" : "path",
          "name" : "projectId",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/id"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/adhoc-query-create-request"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/query-descriptor"
                }
              }
            },
            "description" : "OK"
          }
        },
        "tags" : [ "Query" ]
      }
    },
    "/project/{projectId}/queries/bulk-convert" : {
      "delete" : {
        "description" : "Stop a running bulk query conversion job",
        "operationId" : "stopBulkQueryConversion",
        "parameters" : [ {
          "description" : "Project ID",
          "in" : "path",
          "name" : "projectId",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/id"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/bulk-query-conversion-info"
                }
              }
            },
            "description" : "OK"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error-response"
                }
              }
            },
            "description" : "Not found"
          }
        },
        "tags" : [ "Query" ]
      },
      "get" : {
        "description" : "Get the status of a bulk query conversion job",
        "operationId" : "getBulkQueryConversion",
        "parameters" : [ {
          "description" : "Project ID",
          "in" : "path",
          "name" : "projectId",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/id"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/bulk-query-conversion-info"
                }
              }
            },
            "description" : "OK"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error-response"
                }
              }
            },
            "description" : "Not found"
          }
        },
        "tags" : [ "Query" ]
      },
      "post" : {
        "description" : "Create a bulk query conversion job",
        "operationId" : "createBulkQueryConversion",
        "parameters" : [ {
          "description" : "Project ID",
          "in" : "path",
          "name" : "projectId",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/id"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/bulk-query-conversion-request"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/bulk-query-conversion-info"
                }
              }
            },
            "description" : "OK"
          },
          "497" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error-response"
                }
              }
            },
            "description" : "Operation is not allowed when there are existing query conversions jobs"
          }
        },
        "tags" : [ "Query" ]
      }
    },
    "/project/{projectId}/queries/download" : {
      "post" : {
        "description" : "Download converted queries",
        "operationId" : "downloadConvertedQueries",
        "parameters" : [ {
          "description" : "Project ID",
          "in" : "path",
          "name" : "projectId",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/id"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/download-queries-request"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/zip" : {
                "schema" : {
                  "format" : "binary",
                  "type" : "string"
                }
              }
            },
            "description" : "OK"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error-response"
                }
              }
            },
            "description" : "Not found"
          }
        },
        "tags" : [ "Query" ]
      }
    },
    "/project/{projectId}/queries/synchronize" : {
      "post" : {
        "description" : "Import routines, views and triggers from schema descriptor, and delete any that are no longer included.",
        "operationId" : "synchronizeQueries",
        "parameters" : [ {
          "description" : "Project ID",
          "in" : "path",
          "name" : "projectId",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/id"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "OK"
          },
          "497" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error-response"
                }
              }
            },
            "description" : "Operation is not allowed when there are existing query conversions jobs"
          }
        },
        "tags" : [ "Query" ]
      }
    },
    "/project/{projectId}/queries/{queryId}" : {
      "delete" : {
        "description" : "Delete a query by id",
        "operationId" : "deleteQuery",
        "parameters" : [ {
          "description" : "Project ID",
          "in" : "path",
          "name" : "projectId",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/id"
          }
        }, {
          "description" : "Query ID",
          "in" : "path",
          "name" : "queryId",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/id"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "OK"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error-response"
                }
              }
            },
            "description" : "Not found"
          },
          "497" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error-response"
                }
              }
            },
            "description" : "Operation is not allowed when there are existing query conversions jobs"
          }
        },
        "tags" : [ "Query" ]
      },
      "get" : {
        "description" : "Get a query by id",
        "operationId" : "getQuery",
        "parameters" : [ {
          "description" : "Project ID",
          "in" : "path",
          "name" : "projectId",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/id"
          }
        }, {
          "description" : "Query ID",
          "in" : "path",
          "name" : "queryId",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/id"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/query-details-response"
                }
              }
            },
            "description" : "OK"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error-response"
                }
              }
            },
            "description" : "Not found"
          }
        },
        "tags" : [ "Query" ]
      },
      "patch" : {
        "description" : "Update a query",
        "operationId" : "updateQuery",
        "parameters" : [ {
          "description" : "Project ID",
          "in" : "path",
          "name" : "projectId",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/id"
          }
        }, {
          "description" : "Query ID",
          "in" : "path",
          "name" : "queryId",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/id"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/query-descriptor-patch-request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/query-descriptor"
                }
              }
            },
            "description" : "OK"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error-response"
                }
              }
            },
            "description" : "Not found"
          },
          "494" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error-response"
                }
              }
            },
            "description" : "Conversion status of query is invalid for the current operation"
          },
          "495" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error-response"
                }
              }
            },
            "description" : "Converted query is invalid and can not be compiled"
          },
          "497" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error-response"
                }
              }
            },
            "description" : "Operation is not allowed when there are existing query conversions jobs"
          }
        },
        "tags" : [ "Query" ]
      },
      "post" : {
        "description" : "Convert a query",
        "operationId" : "convertQuery",
        "parameters" : [ {
          "description" : "Project ID",
          "in" : "path",
          "name" : "projectId",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/id"
          }
        }, {
          "description" : "Query ID",
          "in" : "path",
          "name" : "queryId",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/id"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/convert-query-request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/query-descriptor"
                }
              }
            },
            "description" : "OK"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error-response"
                }
              }
            },
            "description" : "Not found"
          },
          "492" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error-response"
                }
              }
            },
            "description" : "No relevant mappings found"
          },
          "497" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error-response"
                }
              }
            },
            "description" : "Operation is not allowed when there are existing query conversions jobs"
          }
        },
        "tags" : [ "Query" ]
      }
    },
    "/project/{projectId}/queries/{queryId}/results/converted" : {
      "get" : {
        "description" : "Get a result page for a query against the converted DB",
        "operationId" : "getConvertedQueryResultPage",
        "parameters" : [ {
          "description" : "Project ID",
          "in" : "path",
          "name" : "projectId",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/id"
          }
        }, {
          "description" : "Query ID",
          "in" : "path",
          "name" : "queryId",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/id"
          }
        }, {
          "description" : "Page number of the query results to retrieve",
          "in" : "query",
          "name" : "pageNumber",
          "required" : false,
          "schema" : {
            "minimum" : 1,
            "type" : "integer"
          }
        }, {
          "description" : "Number of results to retrieve",
          "in" : "query",
          "name" : "pageSize",
          "required" : false,
          "schema" : {
            "maximum" : 200,
            "minimum" : 10,
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/query-run-result-page"
                }
              }
            },
            "description" : "OK"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error-response"
                }
              }
            },
            "description" : "Not found"
          },
          "494" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error-response"
                }
              }
            },
            "description" : "Conversion status of query is invalid for the current operation"
          }
        },
        "tags" : [ "Query" ]
      }
    },
    "/project/{projectId}/queries/{queryId}/results/source" : {
      "get" : {
        "description" : "Get a result page for a query against the source DB",
        "operationId" : "getSourceQueryResultPage",
        "parameters" : [ {
          "description" : "Project ID",
          "in" : "path",
          "name" : "projectId",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/id"
          }
        }, {
          "description" : "Query ID",
          "in" : "path",
          "name" : "queryId",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/id"
          }
        }, {
          "description" : "Page number of the query results to retrieve",
          "in" : "query",
          "name" : "pageNumber",
          "required" : false,
          "schema" : {
            "minimum" : 1,
            "type" : "integer"
          }
        }, {
          "description" : "Number of results to retrieve",
          "in" : "query",
          "name" : "pageSize",
          "required" : false,
          "schema" : {
            "maximum" : 200,
            "minimum" : 10,
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/query-run-result-page"
                }
              }
            },
            "description" : "OK"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error-response"
                }
              }
            },
            "description" : "Not found"
          },
          "494" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error-response"
                }
              }
            },
            "description" : "Conversion status of query is invalid for the current operation"
          }
        },
        "tags" : [ "Query" ]
      }
    },
    "/project/{projectId}/queries/{queryId}/run-converted" : {
      "post" : {
        "description" : "Run a converted query",
        "operationId" : "runConvertedQuery",
        "parameters" : [ {
          "description" : "Project ID",
          "in" : "path",
          "name" : "projectId",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/id"
          }
        }, {
          "description" : "Query ID",
          "in" : "path",
          "name" : "queryId",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/id"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/run-converted-query-request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/query-run-result"
                }
              }
            },
            "description" : "OK"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error-response"
                }
              }
            },
            "description" : "Not found"
          },
          "494" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error-response"
                }
              }
            },
            "description" : "Conversion status of query is invalid for the current operation"
          }
        },
        "tags" : [ "Query" ]
      }
    },
    "/project/{projectId}/queries/{queryId}/run-source" : {
      "post" : {
        "description" : "Run a query against the source DB",
        "operationId" : "runSourceQuery",
        "parameters" : [ {
          "description" : "Project ID",
          "in" : "path",
          "name" : "projectId",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/id"
          }
        }, {
          "description" : "Query ID",
          "in" : "path",
          "name" : "queryId",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/id"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/run-source-query-request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/query-run-result-source"
                }
              }
            },
            "description" : "OK"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error-response"
                }
              }
            },
            "description" : "Not found"
          },
          "496" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error-response"
                }
              }
            },
            "description" : "Operation is not allowed for InputQueryType"
          }
        },
        "tags" : [ "Query" ]
      }
    },
    "/project/{projectId}/verification/{jobId}" : {
      "get" : {
        "description" : "Get the status of a verification job by ID",
        "operationId" : "getVerification",
        "parameters" : [ {
          "description" : "Project ID",
          "in" : "path",
          "name" : "projectId",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/id"
          }
        }, {
          "description" : "Job ID",
          "in" : "path",
          "name" : "jobId",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/id"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/verification-job-status"
                }
              }
            },
            "description" : "OK"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error-response"
                }
              }
            },
            "description" : "Not found"
          }
        },
        "tags" : [ "Verification" ]
      }
    },
    "/project/{projectId}/verification/{jobId}/stop" : {
      "post" : {
        "description" : "Stop a running verification job",
        "operationId" : "stopVerification",
        "parameters" : [ {
          "description" : "Project ID",
          "in" : "path",
          "name" : "projectId",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/id"
          }
        }, {
          "description" : "Job ID",
          "in" : "path",
          "name" : "jobId",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/id"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/verification-job-status"
                }
              }
            },
            "description" : "OK"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error-response"
                }
              }
            },
            "description" : "Not found"
          }
        },
        "tags" : [ "Verification" ]
      }
    },
    "/project/recommendation" : {
      "post" : {
        "description" : "Recommends mappings given a project",
        "operationId" : "postProjectRecommendation",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/recommendation-request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/recommendation-response"
                }
              }
            },
            "description" : "OK"
          }
        },
        "tags" : [ "Project" ]
      }
    },
    "/schema" : {
      "post" : {
        "description" : "Create a new schema descriptor",
        "operationId" : "createSchema",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/project-descriptor-schemas-update-request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/project-descriptor-schemas"
                }
              }
            },
            "description" : "OK"
          }
        },
        "tags" : [ "Schema" ]
      }
    },
    "/schema/ddl" : {
      "post" : {
        "description" : "Analyse a DDL multiline string",
        "operationId" : "analyseDdlSchema",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ddl-schema-analysis-request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/schema-analysis-response"
                }
              }
            },
            "description" : "OK"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error-response"
                }
              }
            },
            "description" : "Invalid DDL Schema"
          }
        },
        "tags" : [ "Schema" ]
      }
    },
    "/schema/jdbc" : {
      "post" : {
        "description" : "Analyse a live database using a JDBC connection",
        "operationId" : "analyseJdbcSchema",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/jdbc-schema-analysis-request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/schema-descriptor"
                }
              }
            },
            "description" : "OK"
          },
          "432" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error-response"
                }
              }
            },
            "description" : "The JDBC driver not found"
          },
          "433" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error-response"
                }
              }
            },
            "description" : "Trouble connecting to SQL database with provided information"
          }
        },
        "tags" : [ "Schema" ]
      }
    },
    "/schema/{schemaId}" : {
      "get" : {
        "description" : "Get a schema descriptor by id",
        "operationId" : "getSchema",
        "parameters" : [ {
          "description" : "Schema ID",
          "in" : "path",
          "name" : "schemaId",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/id"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/project-descriptor-schemas"
                }
              }
            },
            "description" : "OK"
          }
        },
        "tags" : [ "Schema" ]
      },
      "patch" : {
        "description" : "Save an existing schema descriptor",
        "operationId" : "patchSchema",
        "parameters" : [ {
          "description" : "Schema ID",
          "in" : "path",
          "name" : "schemaId",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/id"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/project-descriptor-schemas-patch-request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/project-descriptor-schemas"
                }
              }
            },
            "description" : "OK"
          }
        },
        "tags" : [ "Schema" ]
      },
      "put" : {
        "description" : "Save an existing schema descriptor",
        "operationId" : "updateSchema",
        "parameters" : [ {
          "description" : "Schema ID",
          "in" : "path",
          "name" : "schemaId",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/id"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/project-descriptor-schemas-update-request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/project-descriptor-schemas"
                }
              }
            },
            "description" : "OK"
          }
        },
        "tags" : [ "Schema" ]
      }
    },
    "/settings" : {
      "get" : {
        "description" : "Gets all settings",
        "operationId" : "getAllSettings",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "additionalProperties" : {
                    "$ref" : "#/components/schemas/global-setting-details"
                  },
                  "type" : "object"
                }
              }
            },
            "description" : "All settings in a map, keyed by the setting name"
          }
        },
        "tags" : [ "Settings" ]
      }
    },
    "/settings/{globalSettingName}" : {
      "put" : {
        "description" : "Updates a setting",
        "operationId" : "updateSetting",
        "parameters" : [ {
          "description" : "Global setting name",
          "in" : "path",
          "name" : "globalSettingName",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/global-setting-name"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/updateSetting_request"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/global-setting-details"
                }
              }
            },
            "description" : "The setting with the updated value"
          }
        },
        "tags" : [ "Settings" ]
      }
    },
    "/internal/{projectId}/queries/{queryId}" : {
      "get" : {
        "description" : "Retrieve the payload for a SQL to MQL conversion request",
        "operationId" : "getQueryConversionRequest",
        "parameters" : [ {
          "description" : "Project ID",
          "in" : "path",
          "name" : "projectId",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/id"
          }
        }, {
          "description" : "Query ID",
          "in" : "path",
          "name" : "queryId",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/id"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "additionalProperties" : true,
                  "type" : "object"
                }
              }
            },
            "description" : "OK"
          }
        },
        "tags" : [ "Internal" ]
      }
    },
    "/internal/{projectId}/sql" : {
      "post" : {
        "description" : "Execute a SQL query in a live database and retrieve results for internal testing",
        "operationId" : "executeSQLQuery",
        "parameters" : [ {
          "description" : "Project ID",
          "in" : "path",
          "name" : "projectId",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/id"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/sql-query-request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/sql-query-response"
                }
              }
            },
            "description" : "OK"
          },
          "432" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error-response"
                }
              }
            },
            "description" : "The JDBC driver not found"
          },
          "433" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error-response"
                }
              }
            },
            "description" : "Trouble connecting to SQL database with provided information"
          }
        },
        "tags" : [ "Internal" ]
      }
    }
  },
  "components" : {
    "parameters" : {
      "projectId" : {
        "description" : "Project ID",
        "in" : "path",
        "name" : "projectId",
        "required" : true,
        "schema" : {
          "$ref" : "#/components/schemas/id"
        }
      },
      "jdbcId" : {
        "description" : "JDBC ID",
        "in" : "path",
        "name" : "jdbcId",
        "required" : true,
        "schema" : {
          "$ref" : "#/components/schemas/id"
        }
      },
      "mongodbId" : {
        "description" : "MongoDB ID",
        "in" : "path",
        "name" : "mongodbId",
        "required" : true,
        "schema" : {
          "$ref" : "#/components/schemas/id"
        }
      },
      "limit" : {
        "description" : "Limit the results",
        "example" : 20,
        "in" : "query",
        "name" : "limit",
        "required" : false,
        "schema" : {
          "type" : "integer"
        }
      },
      "jobId" : {
        "description" : "Job ID",
        "in" : "path",
        "name" : "jobId",
        "required" : true,
        "schema" : {
          "$ref" : "#/components/schemas/id"
        }
      },
      "queryId" : {
        "description" : "Query ID",
        "in" : "path",
        "name" : "queryId",
        "required" : true,
        "schema" : {
          "$ref" : "#/components/schemas/id"
        }
      },
      "schemaId" : {
        "description" : "Schema ID",
        "in" : "path",
        "name" : "schemaId",
        "required" : true,
        "schema" : {
          "$ref" : "#/components/schemas/id"
        }
      }
    },
    "responses" : {
      "404" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/error-response"
            }
          }
        },
        "description" : "Not found"
      },
      "433" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/error-response"
            }
          }
        },
        "description" : "Trouble connecting to SQL database with provided information"
      },
      "498" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/error-response"
            }
          }
        },
        "description" : "Analysis Task could not be cancelled."
      },
      "401" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/error-response"
            }
          }
        },
        "description" : "The user is not currently authenticated"
      },
      "472" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/error-response"
            }
          }
        },
        "description" : "Invalid schema attributes within request"
      },
      "440" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/error-response"
            }
          }
        },
        "description" : "Invalid as connection string did not contain a database name"
      },
      "441" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/error-response"
            }
          }
        },
        "description" : "Trouble connecting to MongoDB with provided information"
      },
      "442" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/error-response"
            }
          }
        },
        "description" : "Target database does not support time series collections"
      },
      "500" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/error-response"
            }
          }
        },
        "description" : "Internal server error"
      },
      "470" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/error-response"
            }
          }
        },
        "description" : "Migration job already running"
      },
      "465" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/error-response"
            }
          }
        },
        "description" : "Migration job not paused"
      },
      "466" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/error-response"
            }
          }
        },
        "description" : "Migration job could not be resumed"
      },
      "485" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/error-response"
            }
          }
        },
        "description" : "Unknown issue occurred during project import"
      },
      "486" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/error-response"
            }
          }
        },
        "description" : "Field not found during project import"
      },
      "487" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/error-response"
            }
          }
        },
        "description" : "Project version invalid during import"
      },
      "478" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/error-response"
            }
          }
        },
        "description" : "Migration preview statistics could not be fetched"
      },
      "476" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/error-response"
            }
          }
        },
        "description" : "Pre-flight check failed"
      },
      "497" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/error-response"
            }
          }
        },
        "description" : "Operation is not allowed when there are existing query conversions jobs"
      },
      "492" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/error-response"
            }
          }
        },
        "description" : "No relevant mappings found"
      },
      "494" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/error-response"
            }
          }
        },
        "description" : "Conversion status of query is invalid for the current operation"
      },
      "495" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/error-response"
            }
          }
        },
        "description" : "Converted query is invalid and can not be compiled"
      },
      "496" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/error-response"
            }
          }
        },
        "description" : "Operation is not allowed for InputQueryType"
      },
      "422" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/error-response"
            }
          }
        },
        "description" : "Invalid DDL Schema"
      },
      "432" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/error-response"
            }
          }
        },
        "description" : "The JDBC driver not found"
      }
    },
    "schemas" : {
      "id" : {
        "pattern" : "^[A-Za-z0-9\\-]+$",
        "type" : "string"
      },
      "analysis-task" : {
        "additionalProperties" : false,
        "properties" : {
          "projectId" : {
            "$ref" : "#/components/schemas/id"
          },
          "status" : {
            "enum" : [ "RUNNING", "FAILED", "CANCELLED", "COMPLETED" ],
            "type" : "string"
          },
          "submittedAt" : {
            "format" : "date-time",
            "type" : "string"
          }
        },
        "required" : [ "projectId", "status", "submittedAt" ],
        "type" : "object"
      },
      "error-response" : {
        "additionalProperties" : false,
        "properties" : {
          "jobId" : {
            "$ref" : "#/components/schemas/id"
          },
          "message" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "timestamp" : {
            "format" : "date-time",
            "type" : "string"
          }
        },
        "required" : [ "message", "timestamp" ],
        "type" : "object"
      },
      "analysis-task-create-request" : {
        "additionalProperties" : false,
        "properties" : {
          "jdbcConnectionDetails" : {
            "$ref" : "#/components/schemas/jdbc-connection-details"
          }
        },
        "required" : [ "jdbcConnectionDetails" ],
        "type" : "object"
      },
      "analysis-report" : {
        "additionalProperties" : false,
        "properties" : {
          "id" : {
            "$ref" : "#/components/schemas/id"
          },
          "projectId" : {
            "$ref" : "#/components/schemas/id"
          },
          "generatedAt" : {
            "format" : "date-time",
            "type" : "string"
          },
          "preflightChecks" : {
            "items" : {
              "$ref" : "#/components/schemas/analysis-report-preflight-checks"
            },
            "type" : "array"
          },
          "rules" : {
            "items" : {
              "$ref" : "#/components/schemas/analysis-report-rules"
            },
            "type" : "array"
          }
        },
        "required" : [ "id", "projectId" ],
        "type" : "object"
      },
      "user-clusters" : {
        "properties" : {
          "clusters" : {
            "items" : {
              "$ref" : "#/components/schemas/cluster"
            },
            "type" : "array"
          }
        },
        "required" : [ "clusters" ],
        "type" : "object"
      },
      "user-cluster-detail-request" : {
        "additionalProperties" : false,
        "properties" : {
          "groupId" : {
            "type" : "string"
          },
          "clusterName" : {
            "type" : "string"
          }
        },
        "required" : [ "clusterName", "groupId" ],
        "type" : "object"
      },
      "user-cluster-detail" : {
        "properties" : {
          "connectionStringSrv" : {
            "type" : "string"
          }
        },
        "required" : [ "connectionStringSrv" ],
        "type" : "object"
      },
      "connections-jdbc-extended" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/connections-jdbc-request"
        }, {
          "properties" : {
            "id" : {
              "$ref" : "#/components/schemas/id"
            }
          },
          "required" : [ "id" ],
          "type" : "object"
        } ],
        "type" : "object"
      },
      "connections-jdbc-request" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/jdbc-connection-details-extended"
        }, {
          "additionalProperties" : false,
          "properties" : {
            "connectionType" : {
              "$ref" : "#/components/schemas/connection-type"
            },
            "name" : {
              "type" : "string"
            },
            "isError" : {
              "type" : "boolean"
            }
          },
          "required" : [ "name" ],
          "type" : "object"
        } ],
        "type" : "object"
      },
      "connections-mongodb-extended" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/connections-mongodb-request"
        }, {
          "properties" : {
            "id" : {
              "$ref" : "#/components/schemas/id"
            }
          },
          "required" : [ "id" ],
          "type" : "object"
        } ],
        "type" : "object"
      },
      "connections-mongodb-request" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/mongodb-connection-details-extended"
        }, {
          "additionalProperties" : false,
          "properties" : {
            "connectionType" : {
              "$ref" : "#/components/schemas/connection-type"
            },
            "name" : {
              "type" : "string"
            },
            "isError" : {
              "type" : "boolean"
            }
          },
          "required" : [ "name" ],
          "type" : "object"
        } ],
        "type" : "object"
      },
      "jdbc-connection-details" : {
        "additionalProperties" : false,
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "type" : {
            "$ref" : "#/components/schemas/database-type"
          },
          "url" : {
            "type" : "string"
          },
          "user" : {
            "type" : "string"
          },
          "password" : {
            "type" : "string"
          },
          "existingConnectionId" : {
            "type" : "string"
          }
        },
        "required" : [ "type", "url" ],
        "type" : "object"
      },
      "mongodb-connection-details" : {
        "additionalProperties" : false,
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "connectionString" : {
            "type" : "string"
          },
          "projectId" : {
            "description" : "Atlas projectId",
            "type" : "string"
          },
          "projectName" : {
            "description" : "Atlas project name",
            "type" : "string"
          },
          "clusterName" : {
            "description" : "Atlas cluster name",
            "type" : "string"
          },
          "hasTimeSeriesCollection" : {
            "default" : false,
            "type" : "boolean"
          },
          "existingConnectionId" : {
            "type" : "string"
          }
        },
        "required" : [ "connectionString" ],
        "type" : "object"
      },
      "connectivity-environment" : {
        "properties" : {
          "deployment" : {
            "$ref" : "#/components/schemas/info-deployment"
          },
          "errors" : {
            "items" : {
              "$ref" : "#/components/schemas/connectivity_environment_errors_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "deployment", "errors" ],
        "type" : "object"
      },
      "info" : {
        "additionalProperties" : false,
        "properties" : {
          "build" : {
            "$ref" : "#/components/schemas/info_build"
          },
          "buildStatus" : {
            "$ref" : "#/components/schemas/info_buildStatus"
          },
          "jdbcDriversFound" : {
            "additionalProperties" : {
              "$ref" : "#/components/schemas/info_jdbcDriversFound_value"
            },
            "type" : "object"
          },
          "telemetry" : {
            "$ref" : "#/components/schemas/info_telemetry"
          },
          "authentication" : {
            "$ref" : "#/components/schemas/info_authentication"
          },
          "featureFlags" : {
            "additionalProperties" : {
              "type" : "string"
            },
            "type" : "object"
          },
          "deployment" : {
            "$ref" : "#/components/schemas/info-deployment"
          },
          "queryConversion" : {
            "$ref" : "#/components/schemas/queryConversionInfo"
          }
        },
        "type" : "object"
      },
      "migration-jobs-get-type" : {
        "enum" : [ "IN_PROGRESS" ],
        "type" : "string"
      },
      "migration-job-status" : {
        "additionalProperties" : false,
        "properties" : {
          "id" : {
            "$ref" : "#/components/schemas/id"
          },
          "projectId" : {
            "$ref" : "#/components/schemas/id"
          },
          "status" : {
            "enum" : [ "RUNNING", "FAILED", "CANCELLING", "CANCELLED", "COMPLETED", "CLEANING_UP" ],
            "type" : "string"
          },
          "cdcStatus" : {
            "default" : "NOT_STARTED",
            "enum" : [ "NOT_STARTED", "RUNNING", "COMPLETING", "COMPLETED", "FAILED", "CANCELLED", "PAUSED" ],
            "type" : "string"
          },
          "verificationJobId" : {
            "type" : "string"
          },
          "options" : {
            "$ref" : "#/components/schemas/migration-job-descriptor-options"
          },
          "jdbcConnectionString" : {
            "type" : "string"
          },
          "mongoDbConnectionString" : {
            "type" : "string"
          },
          "atlasMetadata" : {
            "$ref" : "#/components/schemas/migration_job_status_atlasMetadata"
          },
          "submittedAt" : {
            "format" : "date-time",
            "type" : "string"
          },
          "statistics" : {
            "$ref" : "#/components/schemas/migration-job-statistics"
          },
          "cdcStatistics" : {
            "$ref" : "#/components/schemas/cdc-job-statistics"
          },
          "jobUpdates" : {
            "items" : {
              "$ref" : "#/components/schemas/job-update"
            },
            "type" : "array"
          },
          "failureError" : {
            "$ref" : "#/components/schemas/failureError"
          },
          "metadata" : {
            "$ref" : "#/components/schemas/migration_job_status_metadata"
          },
          "relationalTableFilters" : {
            "$ref" : "#/components/schemas/relational-table-filters"
          }
        },
        "required" : [ "id", "options", "projectId", "status", "submittedAt" ],
        "type" : "object"
      },
      "post-migration-job-request" : {
        "additionalProperties" : false,
        "properties" : {
          "projectId" : {
            "type" : "string"
          },
          "jdbcConnectionDetails" : {
            "$ref" : "#/components/schemas/jdbc-connection-details"
          },
          "mongodbConnectionDetails" : {
            "$ref" : "#/components/schemas/mongodb-connection-details"
          },
          "options" : {
            "$ref" : "#/components/schemas/migration-job-descriptor-options"
          },
          "verification" : {
            "$ref" : "#/components/schemas/migration-verification"
          },
          "relationalTableFilters" : {
            "$ref" : "#/components/schemas/relational-table-filters"
          }
        },
        "required" : [ "jdbcConnectionDetails", "mongodbConnectionDetails", "options", "projectId", "verification" ],
        "type" : "object"
      },
      "user" : {
        "properties" : {
          "email" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          }
        },
        "required" : [ "email", "name" ],
        "type" : "object"
      },
      "project-descriptor-summary" : {
        "additionalProperties" : false,
        "properties" : {
          "id" : {
            "$ref" : "#/components/schemas/id"
          },
          "jdbcId" : {
            "$ref" : "#/components/schemas/id"
          },
          "mongodbId" : {
            "$ref" : "#/components/schemas/id"
          },
          "name" : {
            "maxLength" : 50,
            "minLength" : 1,
            "type" : "string"
          },
          "type" : {
            "$ref" : "#/components/schemas/database-type"
          },
          "lastModified" : {
            "format" : "date-time",
            "type" : "string"
          }
        },
        "required" : [ "id", "name", "type" ],
        "type" : "object"
      },
      "project-descriptor-create-request" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/ProjectDescriptorBase"
        } ],
        "type" : "object"
      },
      "ProjectDescriptor" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/ProjectDescriptorBase"
        }, {
          "properties" : {
            "id" : {
              "$ref" : "#/components/schemas/id"
            }
          },
          "required" : [ "id" ],
          "type" : "object"
        } ],
        "type" : "object"
      },
      "ProjectDescriptorBase" : {
        "additionalProperties" : false,
        "properties" : {
          "name" : {
            "$ref" : "#/components/schemas/ProjectName"
          },
          "type" : {
            "$ref" : "#/components/schemas/database-type"
          },
          "lastModified" : {
            "format" : "date-time",
            "type" : "string"
          },
          "schemasId" : {
            "$ref" : "#/components/schemas/id"
          },
          "jdbcId" : {
            "$ref" : "#/components/schemas/id"
          },
          "mongodbId" : {
            "$ref" : "#/components/schemas/id"
          },
          "content" : {
            "$ref" : "#/components/schemas/ProjectDescriptorContent"
          },
          "connectionDetails" : {
            "$ref" : "#/components/schemas/ProjectDescriptorBase_connectionDetails"
          },
          "isSampleProject" : {
            "type" : "boolean"
          }
        },
        "required" : [ "content", "name", "schemasId", "type" ],
        "type" : "object"
      },
      "ProjectName" : {
        "maxLength" : 50,
        "minLength" : 1,
        "type" : "string"
      },
      "ProjectDescriptorContent" : {
        "properties" : {
          "settings" : {
            "$ref" : "#/components/schemas/migration-settings"
          },
          "collections" : {
            "$ref" : "#/components/schemas/migration-collections"
          },
          "mappings" : {
            "$ref" : "#/components/schemas/migration-mappings"
          },
          "relationships" : {
            "$ref" : "#/components/schemas/migration-relationships"
          },
          "diagrams" : {
            "$ref" : "#/components/schemas/project-diagrams"
          },
          "tables" : {
            "$ref" : "#/components/schemas/project-tables"
          }
        },
        "required" : [ "collections", "diagrams", "mappings", "relationships", "schemas", "settings", "tables" ],
        "type" : "object"
      },
      "project-descriptor-update-request" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/ProjectDescriptor"
        } ],
        "type" : "object"
      },
      "project-descriptor-patch-request" : {
        "additionalProperties" : false,
        "properties" : {
          "name" : {
            "$ref" : "#/components/schemas/ProjectName"
          }
        },
        "type" : "object"
      },
      "codegen-request" : {
        "additionalProperties" : false,
        "properties" : {
          "collections" : {
            "description" : "MongoDB collections to include in generated code",
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "includeSupportFiles" : {
            "description" : "Whether to include support files, if applicable for the selected language and framework",
            "type" : "boolean"
          },
          "language" : {
            "$ref" : "#/components/schemas/codegen-language-type"
          },
          "framework" : {
            "$ref" : "#/components/schemas/codegen-framework-type"
          }
        },
        "required" : [ "collections", "framework", "includeSupportFiles", "language" ],
        "type" : "object"
      },
      "codegen-response" : {
        "additionalProperties" : false,
        "properties" : {
          "language" : {
            "$ref" : "#/components/schemas/codegen-language-type"
          },
          "framework" : {
            "$ref" : "#/components/schemas/codegen-framework-type"
          },
          "files" : {
            "items" : {
              "$ref" : "#/components/schemas/codegen_response_files_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "files", "framework", "language" ],
        "type" : "object"
      },
      "codegen-metadata-response" : {
        "properties" : {
          "metadata" : {
            "items" : {
              "$ref" : "#/components/schemas/codegen_metadata_response_metadata_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "metadata" ],
        "type" : "object"
      },
      "export-file" : {
        "additionalProperties" : false,
        "properties" : {
          "version" : {
            "type" : "string"
          },
          "project" : {
            "$ref" : "#/components/schemas/ProjectDescriptor"
          },
          "schema" : {
            "$ref" : "#/components/schemas/project-descriptor-schemas"
          },
          "queries" : {
            "items" : {
              "$ref" : "#/components/schemas/query-descriptor"
            },
            "type" : "array"
          }
        },
        "required" : [ "project", "schema", "version" ],
        "type" : "object"
      },
      "migration-job-statistics-preview" : {
        "additionalProperties" : false,
        "properties" : {
          "totalTableCount" : {
            "type" : "integer"
          },
          "totalEvents" : {
            "format" : "int64",
            "type" : "integer"
          },
          "totalEventSize" : {
            "format" : "int64",
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "pre-migration-job-request" : {
        "additionalProperties" : false,
        "properties" : {
          "jdbcConnectionDetails" : {
            "$ref" : "#/components/schemas/jdbc-connection-details"
          },
          "options" : {
            "$ref" : "#/components/schemas/migration-job-descriptor-options"
          }
        },
        "required" : [ "options" ],
        "type" : "object"
      },
      "query-descriptor-summary" : {
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "projectId" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "inputQuery" : {
            "type" : "string"
          },
          "lastModifiedAt" : {
            "format" : "date-time",
            "type" : "string"
          },
          "queryType" : {
            "$ref" : "#/components/schemas/query-input-type"
          },
          "queryStatus" : {
            "$ref" : "#/components/schemas/query-output-status"
          },
          "targetLanguage" : {
            "$ref" : "#/components/schemas/convert-query-language-type"
          }
        },
        "required" : [ "id", "inputQuery", "projectId", "queryStatus", "queryType" ],
        "type" : "object"
      },
      "adhoc-query-create-request" : {
        "additionalProperties" : false,
        "properties" : {
          "inputQuery" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "query-descriptor" : {
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "projectId" : {
            "type" : "string"
          },
          "input" : {
            "$ref" : "#/components/schemas/query-input"
          },
          "output" : {
            "$ref" : "#/components/schemas/query-output"
          }
        },
        "required" : [ "id", "input", "output", "projectId" ],
        "type" : "object"
      },
      "bulk-query-conversion-info" : {
        "additionalProperties" : false,
        "properties" : {
          "pendingQueries" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "runningQueries" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "completedQueries" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "failedQueries" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        },
        "required" : [ "completedQueries", "failedQueries", "pendingQueries", "runningQueries" ],
        "type" : "object"
      },
      "bulk-query-conversion-request" : {
        "additionalProperties" : false,
        "properties" : {
          "language" : {
            "$ref" : "#/components/schemas/convert-query-language-type"
          },
          "queries" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        },
        "required" : [ "language", "queries" ],
        "type" : "object"
      },
      "download-queries-request" : {
        "additionalProperties" : false,
        "properties" : {
          "queries" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        },
        "required" : [ "queries" ],
        "type" : "object"
      },
      "query-details-response" : {
        "properties" : {
          "query" : {
            "$ref" : "#/components/schemas/query-descriptor"
          },
          "convertedRunResult" : {
            "$ref" : "#/components/schemas/query-run-result"
          },
          "sourceRunResult" : {
            "$ref" : "#/components/schemas/query-run-result-source"
          }
        },
        "required" : [ "query" ],
        "type" : "object"
      },
      "convert-query-request" : {
        "additionalProperties" : false,
        "properties" : {
          "language" : {
            "$ref" : "#/components/schemas/convert-query-language-type"
          }
        },
        "required" : [ "language" ],
        "type" : "object"
      },
      "query-descriptor-patch-request" : {
        "properties" : {
          "input" : {
            "$ref" : "#/components/schemas/queryInputPatch"
          },
          "output" : {
            "$ref" : "#/components/schemas/queryOutputPatch"
          }
        },
        "type" : "object"
      },
      "query-run-result-page" : {
        "properties" : {
          "data" : {
            "type" : "string"
          },
          "pageNumber" : {
            "type" : "integer"
          },
          "pageSize" : {
            "type" : "integer"
          },
          "total" : {
            "type" : "integer"
          },
          "hasMore" : {
            "type" : "boolean"
          }
        },
        "required" : [ "data", "hasMore", "pageNumber", "pageSize", "total" ],
        "type" : "object"
      },
      "run-converted-query-request" : {
        "additionalProperties" : false,
        "properties" : {
          "runScript" : {
            "type" : "string"
          },
          "mongodbConnectionDetails" : {
            "$ref" : "#/components/schemas/mongodb-connection-details-extended"
          }
        },
        "required" : [ "mongodbConnectionDetails", "runScript" ],
        "type" : "object"
      },
      "query-run-result" : {
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "projectId" : {
            "type" : "string"
          },
          "executionTimeMs" : {
            "type" : "number"
          },
          "result" : {
            "$ref" : "#/components/schemas/query-run-result-page"
          },
          "error" : {
            "type" : "string"
          },
          "logs" : {
            "$ref" : "#/components/schemas/query-run-logs"
          }
        },
        "required" : [ "id", "projectId" ],
        "type" : "object"
      },
      "run-source-query-request" : {
        "additionalProperties" : false,
        "properties" : {
          "runScript" : {
            "type" : "string"
          },
          "jdbcConnectionDetails" : {
            "$ref" : "#/components/schemas/jdbc-connection-details"
          }
        },
        "required" : [ "jdbcConnectionDetails" ],
        "type" : "object"
      },
      "query-run-result-source" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/query-run-result"
        }, {
          "additionalProperties" : false,
          "properties" : {
            "fieldMetadataMap" : {
              "additionalProperties" : {
                "$ref" : "#/components/schemas/query_run_result_source_allOf_fieldMetadataMap"
              },
              "type" : "object"
            }
          },
          "type" : "object"
        } ]
      },
      "verification-job-status" : {
        "additionalProperties" : false,
        "properties" : {
          "id" : {
            "$ref" : "#/components/schemas/id"
          },
          "createdAt" : {
            "format" : "date-time",
            "type" : "string"
          },
          "modifiedAt" : {
            "format" : "date-time",
            "type" : "string"
          },
          "projectId" : {
            "$ref" : "#/components/schemas/id"
          },
          "migrationJobId" : {
            "type" : "string"
          },
          "failureError" : {
            "$ref" : "#/components/schemas/verificationFailureError"
          },
          "status" : {
            "$ref" : "#/components/schemas/verification-status-enum"
          },
          "collections" : {
            "$ref" : "#/components/schemas/verifiedCollections"
          },
          "metadata" : {
            "$ref" : "#/components/schemas/verificationJobMetadata"
          }
        },
        "required" : [ "createdAt", "id", "migrationJobId", "modifiedAt", "projectId", "status" ],
        "type" : "object"
      },
      "recommendation-request" : {
        "additionalProperties" : false,
        "properties" : {
          "schema" : {
            "$ref" : "#/components/schemas/schema-descriptor"
          },
          "strategy" : {
            "enum" : [ "ONE_TO_ONE", "NONE", "RECOMMENDATION" ],
            "type" : "string"
          },
          "selectedTables" : {
            "items" : {
              "$ref" : "#/components/schemas/relational-path"
            },
            "type" : "array"
          }
        },
        "required" : [ "schema", "selectedTables" ],
        "type" : "object"
      },
      "recommendation-response" : {
        "properties" : {
          "collections" : {
            "$ref" : "#/components/schemas/migration-collections"
          },
          "mappings" : {
            "$ref" : "#/components/schemas/recommendation-mappings"
          },
          "relationships" : {
            "$ref" : "#/components/schemas/migration-relationships"
          }
        },
        "required" : [ "collections", "mappings", "relationships" ],
        "type" : "object"
      },
      "project-descriptor-schemas-update-request" : {
        "additionalProperties" : false,
        "properties" : {
          "full" : {
            "$ref" : "#/components/schemas/schema-descriptor"
          },
          "imported" : {
            "$ref" : "#/components/schemas/schema-imported"
          }
        },
        "required" : [ "full", "imported" ],
        "type" : "object"
      },
      "project-descriptor-schemas" : {
        "additionalProperties" : false,
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "full" : {
            "$ref" : "#/components/schemas/schema-descriptor"
          },
          "imported" : {
            "$ref" : "#/components/schemas/schema-imported"
          }
        },
        "required" : [ "full", "imported" ],
        "type" : "object"
      },
      "ddl-schema-analysis-request" : {
        "additionalProperties" : false,
        "properties" : {
          "ddlString" : {
            "type" : "string"
          },
          "type" : {
            "$ref" : "#/components/schemas/database-type"
          },
          "fileName" : {
            "type" : "string"
          }
        },
        "required" : [ "ddlString", "fileName", "type" ],
        "type" : "object"
      },
      "schema-analysis-response" : {
        "additionalProperties" : false,
        "properties" : {
          "schema" : {
            "$ref" : "#/components/schemas/schema-descriptor"
          },
          "warnings" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        },
        "required" : [ "schema", "warnings" ],
        "type" : "object"
      },
      "jdbc-schema-analysis-request" : {
        "additionalProperties" : false,
        "properties" : {
          "jdbcConnectionDetails" : {
            "$ref" : "#/components/schemas/jdbc-connection-details"
          },
          "analyseRowCounts" : {
            "type" : "boolean"
          },
          "includeViews" : {
            "default" : false,
            "type" : "boolean"
          },
          "includeRoutines" : {
            "default" : false,
            "type" : "boolean"
          },
          "includeTriggers" : {
            "default" : false,
            "type" : "boolean"
          },
          "includeTables" : {
            "default" : true,
            "type" : "boolean"
          },
          "includeColumns" : {
            "default" : true,
            "type" : "boolean"
          },
          "imported" : {
            "$ref" : "#/components/schemas/schema-imported"
          }
        },
        "required" : [ "jdbcConnectionDetails" ],
        "type" : "object"
      },
      "schema-descriptor" : {
        "additionalProperties" : false,
        "properties" : {
          "databases" : {
            "additionalProperties" : {
              "$ref" : "#/components/schemas/database"
            },
            "type" : "object"
          },
          "metadata" : {
            "$ref" : "#/components/schemas/schema_descriptor_metadata"
          }
        },
        "required" : [ "databases" ],
        "type" : "object"
      },
      "project-descriptor-schemas-patch-request" : {
        "additionalProperties" : false,
        "properties" : {
          "full" : {
            "$ref" : "#/components/schemas/schema-descriptor"
          },
          "imported" : {
            "$ref" : "#/components/schemas/schema-imported"
          }
        },
        "type" : "object"
      },
      "global-setting-details" : {
        "properties" : {
          "name" : {
            "$ref" : "#/components/schemas/global-setting-name"
          },
          "createdAt" : {
            "format" : "date-time",
            "type" : "string"
          },
          "lastModifiedAt" : {
            "format" : "date-time",
            "type" : "string"
          },
          "value" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "global-setting-name" : {
        "enum" : [ "QUERY_CONVERTER_QUERY_STORAGE" ],
        "type" : "string"
      },
      "sql-query-request" : {
        "additionalProperties" : false,
        "properties" : {
          "jdbcConnectionDetails" : {
            "$ref" : "#/components/schemas/jdbc-connection-details"
          },
          "inputQuery" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "sql-query-response" : {
        "additionalProperties" : false,
        "properties" : {
          "sqlResults" : {
            "items" : {
              "type" : "object"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "analysis-report-preflight-checks" : {
        "additionalProperties" : false,
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "migrationMode" : {
            "$ref" : "#/components/schemas/migration-mode"
          },
          "passed" : {
            "type" : "boolean"
          }
        },
        "required" : [ "migrationMode", "name", "passed" ],
        "type" : "object"
      },
      "analysis-report-rules" : {
        "additionalProperties" : false,
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "dboType" : {
            "$ref" : "#/components/schemas/rule_dbo_type"
          },
          "entityName" : {
            "type" : "string"
          },
          "detectionText" : {
            "type" : "string"
          },
          "confidence" : {
            "$ref" : "#/components/schemas/rule_confidence"
          },
          "mitigationText" : {
            "type" : "string"
          }
        },
        "required" : [ "confidence", "dboType", "detectionText", "entityName", "id", "mitigationText" ],
        "type" : "object"
      },
      "jdbc-connection-details-extended" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/jdbc-connection-details"
        }, {
          "additionalProperties" : false,
          "properties" : {
            "isManualUri" : {
              "type" : "boolean"
            },
            "host" : {
              "type" : "string"
            },
            "port" : {
              "type" : "string"
            },
            "database" : {
              "type" : "string"
            },
            "oracleIdentifier" : {
              "enum" : [ "SERVICE_NAME", "SID" ],
              "type" : "string"
            },
            "mssqlAuthentication" : {
              "enum" : [ "SQL_SERVER", "WINDOWS" ],
              "type" : "string"
            },
            "useSSL" : {
              "type" : "boolean"
            },
            "trustServerCertificate" : {
              "type" : "boolean"
            },
            "mysqlSSLMode" : {
              "enum" : [ "PREFERRED", "REQUIRED", "VERIFY_CA", "VERIFY_IDENTITY" ],
              "type" : "string"
            },
            "postgresSSLMode" : {
              "enum" : [ "PREFER", "REQUIRE", "VERIFY_CA", "VERIFY_FULL" ],
              "type" : "string"
            },
            "savePassword" : {
              "type" : "boolean"
            }
          },
          "type" : "object"
        } ]
      },
      "connection-type" : {
        "enum" : [ "DEMO", "QA", "STAGING", "DEVELOPMENT", "PRODUCTION", "NONE" ],
        "type" : "string"
      },
      "mongodb-connection-details-extended" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/mongodb-connection-details"
        }, {
          "additionalProperties" : false,
          "properties" : {
            "clusterId" : {
              "type" : "string"
            },
            "database" : {
              "type" : "string"
            },
            "user" : {
              "type" : "string"
            },
            "password" : {
              "type" : "string"
            },
            "savePassword" : {
              "type" : "boolean"
            }
          },
          "type" : "object"
        } ]
      },
      "database-type" : {
        "type" : "string"
      },
      "info-deployment" : {
        "properties" : {
          "type" : {
            "enum" : [ "LOCAL", "UNATTENDED", "KAFKA", "CLOUD", "CONFLUENT", "MSK" ],
            "type" : "string"
          },
          "environment" : {
            "enum" : [ "PROD", "DEV" ],
            "type" : "string"
          }
        },
        "required" : [ "environment", "type" ],
        "type" : "object"
      },
      "query-runner-status" : {
        "enum" : [ "ONLINE", "OFFLINE", "OUTDATED" ],
        "type" : "string"
      },
      "migration-job-descriptor-options" : {
        "additionalProperties" : false,
        "properties" : {
          "dropCollections" : {
            "default" : false,
            "type" : "boolean"
          },
          "mode" : {
            "$ref" : "#/components/schemas/migration-mode"
          },
          "errorHandling" : {
            "default" : "FAIL",
            "enum" : [ "FAIL", "WARN", "SKIP" ],
            "type" : "string"
          },
          "errorTolerance" : {
            "description" : "The number of failures (on the record level) that should be tolerated before terminating the migration.\nThe value is strictly greater than or equal to.\n",
            "minimum" : 0,
            "type" : "integer"
          }
        },
        "required" : [ "mode" ],
        "type" : "object"
      },
      "migration-job-statistics" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/migration-job-statistics-details"
        }, {
          "$ref" : "#/components/schemas/migration-job-statistics-preview"
        } ]
      },
      "cdc-job-statistics" : {
        "additionalProperties" : false,
        "properties" : {
          "startedAt" : {
            "format" : "date-time",
            "type" : "string"
          },
          "lastEventTime" : {
            "format" : "date-time",
            "type" : "string"
          },
          "eventsInLastHour" : {
            "default" : 0,
            "format" : "int64",
            "type" : "integer"
          },
          "eventsInLastMinute" : {
            "default" : 0,
            "format" : "int64",
            "type" : "integer"
          },
          "totalEventsSeen" : {
            "default" : 0,
            "format" : "int64",
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "job-update" : {
        "properties" : {
          "eventType" : {
            "enum" : [ "DB_SETUP_ERROR", "ERROR", "WARNING", "INFO" ],
            "type" : "string"
          },
          "stage" : {
            "enum" : [ "SNAPSHOTTING", "STREAMING", "VERIFICATION" ],
            "type" : "string"
          },
          "message" : {
            "type" : "string"
          },
          "details" : {
            "type" : "string"
          },
          "timestamp" : {
            "format" : "date-time",
            "type" : "string"
          },
          "count" : {
            "format" : "int64",
            "type" : "integer"
          },
          "location" : {
            "$ref" : "#/components/schemas/job_update_location"
          }
        },
        "required" : [ "eventType", "message", "timestamp" ],
        "type" : "object"
      },
      "failureError" : {
        "additionalProperties" : false,
        "properties" : {
          "errorType" : {
            "type" : "string"
          },
          "message" : {
            "type" : "string"
          },
          "failureAt" : {
            "format" : "date-time",
            "type" : "string"
          },
          "setupError" : {
            "default" : false,
            "type" : "boolean"
          }
        },
        "required" : [ "errorType", "failureAt", "message", "setupError" ],
        "type" : "object"
      },
      "verification-status-enum" : {
        "enum" : [ "VERIFYING", "FAILED", "CANCELLING", "CANCELLED", "VERIFIED", "ABORTED" ],
        "type" : "string"
      },
      "relational-table-filters" : {
        "additionalProperties" : {
          "additionalProperties" : {
            "$ref" : "#/components/schemas/table-filter"
          },
          "description" : "Table",
          "type" : "object"
        },
        "description" : "Schema",
        "type" : "object"
      },
      "migration-verification" : {
        "additionalProperties" : false,
        "properties" : {
          "enabled" : {
            "default" : false,
            "type" : "boolean"
          }
        },
        "required" : [ "enabled" ],
        "type" : "object"
      },
      "ddl-connection-details" : {
        "additionalProperties" : false,
        "properties" : {
          "type" : {
            "$ref" : "#/components/schemas/database-type"
          }
        },
        "required" : [ "type" ],
        "type" : "object"
      },
      "migration-settings" : {
        "additionalProperties" : false,
        "properties" : {
          "viewMode" : {
            "enum" : [ "HORIZONTAL", "VERTICAL", "RELATIONAL", "MONGODB" ],
            "type" : "string"
          },
          "shouldRecommendSchema" : {
            "type" : "boolean"
          },
          "casing" : {
            "enum" : [ "CAMEL_CASE", "TITLE_CASE", "KEBAB_CASE", "SNAKE_CASE", "UPPER_SNAKE_CASE" ],
            "type" : "string"
          },
          "codegen" : {
            "$ref" : "#/components/schemas/codegen-settings"
          },
          "keyHandling" : {
            "enum" : [ "WRAPPED", "SINGLE", "GENERATED" ],
            "type" : "string"
          }
        },
        "required" : [ "keyHandling" ],
        "type" : "object"
      },
      "migration-collections" : {
        "additionalProperties" : {
          "$ref" : "#/components/schemas/collection"
        },
        "type" : "object"
      },
      "migration-mappings" : {
        "additionalProperties" : {
          "$ref" : "#/components/schemas/mapping"
        },
        "type" : "object"
      },
      "migration-relationships" : {
        "additionalProperties" : false,
        "properties" : {
          "tables" : {
            "additionalProperties" : {
              "$ref" : "#/components/schemas/mapping-object"
            },
            "type" : "object"
          },
          "collections" : {
            "additionalProperties" : {
              "$ref" : "#/components/schemas/mapping-object"
            },
            "type" : "object"
          },
          "mappings" : {
            "additionalProperties" : {
              "$ref" : "#/components/schemas/mapping-relationship"
            },
            "type" : "object"
          }
        },
        "required" : [ "collections", "mappings", "tables" ],
        "type" : "object"
      },
      "project-diagrams" : {
        "additionalProperties" : false,
        "properties" : {
          "activeTab" : {
            "type" : "string"
          },
          "tabs" : {
            "items" : {
              "$ref" : "#/components/schemas/project-diagram"
            },
            "type" : "array"
          }
        },
        "required" : [ "activeTab", "tabs" ],
        "type" : "object"
      },
      "project-tables" : {
        "additionalProperties" : {
          "$ref" : "#/components/schemas/project-table"
        },
        "type" : "object"
      },
      "codegen-language-type" : {
        "enum" : [ "JAVA", "CSHARP", "JAVASCRIPT", "JSON", "PYTHON" ],
        "type" : "string"
      },
      "codegen-framework-type" : {
        "enum" : [ "POJO", "POCO", "SPRING_DATA", "PERSISTENCE_LAYER", "MONGOOSE_SCHEMAS", "NODE", "MONGODB_JSON_SCHEMA", "STANDARD_JSON_SCHEMA", "JSON_EXAMPLE_SCHEMA", "PYTHON_TYPED_DICT_CLASSES" ],
        "type" : "string"
      },
      "codegen-filetype-type" : {
        "enum" : [ "ENTITY", "REPOSITORY", "SUPPORT" ],
        "type" : "string"
      },
      "query-input-type" : {
        "enum" : [ "STORED_PROCEDURE", "TRIGGER", "VIEW", "USER_QUERY" ],
        "type" : "string"
      },
      "query-output-status" : {
        "enum" : [ "NOT_STARTED", "RUNNING", "FAILED", "COMPLETED", "PENDING" ],
        "type" : "string"
      },
      "convert-query-language-type" : {
        "enum" : [ "JAVA", "CSHARP", "JAVASCRIPT" ],
        "type" : "string"
      },
      "query-input" : {
        "additionalProperties" : false,
        "properties" : {
          "database" : {
            "type" : "string"
          },
          "schema" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "query" : {
            "type" : "string"
          },
          "createdAt" : {
            "format" : "date-time",
            "type" : "string"
          },
          "runScriptTemplate" : {
            "type" : "string"
          },
          "queryType" : {
            "$ref" : "#/components/schemas/query-input-type"
          }
        },
        "required" : [ "name", "query", "queryType" ],
        "type" : "object"
      },
      "query-output" : {
        "additionalProperties" : false,
        "properties" : {
          "query" : {
            "type" : "string"
          },
          "status" : {
            "$ref" : "#/components/schemas/query-output-status"
          },
          "lastModifiedAt" : {
            "format" : "date-time",
            "type" : "string"
          },
          "language" : {
            "$ref" : "#/components/schemas/convert-query-language-type"
          },
          "errorMessage" : {
            "type" : "string"
          },
          "modified" : {
            "type" : "boolean"
          },
          "runScriptTemplate" : {
            "type" : "string"
          },
          "functionName" : {
            "type" : "string"
          }
        },
        "required" : [ "query", "status" ],
        "type" : "object"
      },
      "query-run-logs" : {
        "properties" : {
          "stdout" : {
            "type" : "string"
          },
          "stderr" : {
            "type" : "string"
          }
        },
        "required" : [ "stderr", "stdout" ],
        "type" : "object"
      },
      "verificationFailureError" : {
        "additionalProperties" : false,
        "properties" : {
          "encounteredAt" : {
            "format" : "date-time",
            "type" : "string"
          },
          "message" : {
            "type" : "string"
          }
        },
        "required" : [ "encounteredAt", "message" ],
        "type" : "object"
      },
      "verifiedCollections" : {
        "additionalProperties" : {
          "$ref" : "#/components/schemas/verifiedCollection"
        },
        "type" : "object"
      },
      "verifiedCollection" : {
        "additionalProperties" : false,
        "properties" : {
          "documentsToVerify" : {
            "default" : 0,
            "format" : "int64",
            "type" : "integer"
          },
          "documentsVerified" : {
            "default" : 0,
            "format" : "int64",
            "type" : "integer"
          },
          "errorCount" : {
            "default" : 0,
            "format" : "int64",
            "type" : "integer"
          },
          "completed" : {
            "default" : false,
            "type" : "boolean"
          },
          "collectionWideError" : {
            "$ref" : "#/components/schemas/collectionWideError"
          },
          "collectionErrors" : {
            "items" : {
              "$ref" : "#/components/schemas/collectionErrors"
            },
            "type" : "array"
          }
        },
        "required" : [ "completed", "documentsToVerify", "documentsVerified", "errorCount" ],
        "type" : "object"
      },
      "collectionWideError" : {
        "additionalProperties" : false,
        "properties" : {
          "errorType" : {
            "type" : "string"
          },
          "errorMessage" : {
            "type" : "string"
          },
          "encounteredAt" : {
            "format" : "date-time",
            "type" : "string"
          }
        },
        "required" : [ "encounteredAt", "errorMessage", "errorType" ],
        "type" : "object"
      },
      "collectionErrors" : {
        "additionalProperties" : false,
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "encounteredAt" : {
            "format" : "date-time",
            "type" : "string"
          },
          "errors" : {
            "items" : {
              "$ref" : "#/components/schemas/documentErrors"
            },
            "type" : "array"
          }
        },
        "required" : [ "encounteredAt", "errors", "id" ],
        "type" : "object"
      },
      "documentErrors" : {
        "additionalProperties" : false,
        "properties" : {
          "path" : {
            "type" : "string"
          },
          "message" : {
            "type" : "string"
          }
        },
        "required" : [ "message", "path" ],
        "type" : "object"
      },
      "verificationJobMetadata" : {
        "additionalProperties" : false,
        "properties" : {
          "telemetryUserId" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "relational-path" : {
        "additionalProperties" : false,
        "properties" : {
          "database" : {
            "type" : "string"
          },
          "schema" : {
            "type" : "string"
          },
          "table" : {
            "type" : "string"
          }
        },
        "required" : [ "database", "schema", "table" ],
        "type" : "object"
      },
      "recommendation-mappings" : {
        "additionalProperties" : {
          "$ref" : "#/components/schemas/recommendation-mapping"
        },
        "type" : "object"
      },
      "schema-imported" : {
        "additionalProperties" : {
          "additionalProperties" : {
            "additionalProperties" : {
              "type" : "object"
            },
            "type" : "object"
          },
          "type" : "object"
        },
        "type" : "object"
      },
      "database" : {
        "additionalProperties" : false,
        "properties" : {
          "schemas" : {
            "additionalProperties" : {
              "$ref" : "#/components/schemas/schema"
            },
            "type" : "object"
          }
        },
        "required" : [ "schemas" ],
        "type" : "object"
      },
      "migration-mode" : {
        "enum" : [ "SNAPSHOT", "CDC", "CDC_ONLY" ],
        "type" : "string"
      },
      "rule_dbo_type" : {
        "enum" : [ "TABLE", "VIEW", "FUNCTION", "STORED_PROCEDURE", "INDEX", "TRIGGER", "DATABASE", "COLUMN" ],
        "type" : "string"
      },
      "rule_confidence" : {
        "enum" : [ "HIGH", "MEDIUM", "LOW" ],
        "type" : "string"
      },
      "migration-job-statistics-details" : {
        "additionalProperties" : false,
        "properties" : {
          "startedAt" : {
            "format" : "date-time",
            "type" : "string"
          },
          "elapsedSeconds" : {
            "format" : "int64",
            "type" : "integer"
          },
          "remainingTableCount" : {
            "type" : "integer"
          },
          "processingTables" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "totalEventsSeen" : {
            "default" : 0,
            "format" : "int64",
            "type" : "integer"
          },
          "snapshotCompleted" : {
            "default" : false,
            "type" : "boolean"
          }
        },
        "type" : "object"
      },
      "tableLocation" : {
        "properties" : {
          "table" : {
            "type" : "string"
          }
        },
        "required" : [ "table" ],
        "type" : "object"
      },
      "collectionLocation" : {
        "properties" : {
          "collection" : {
            "type" : "string"
          }
        },
        "required" : [ "collection" ],
        "type" : "object"
      },
      "documentLocation" : {
        "properties" : {
          "collection" : {
            "type" : "string"
          },
          "document" : {
            "type" : "string"
          }
        },
        "required" : [ "collection", "document" ],
        "type" : "object"
      },
      "table-filter" : {
        "additionalProperties" : false,
        "properties" : {
          "whereClause" : {
            "type" : "string"
          },
          "rowCount" : {
            "format" : "int64",
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "codegen-settings" : {
        "properties" : {
          "language" : {
            "$ref" : "#/components/schemas/codegen-language-type"
          },
          "framework" : {
            "$ref" : "#/components/schemas/codegen-framework-type"
          },
          "withSupportingFiles" : {
            "type" : "boolean"
          },
          "excludedCollections" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "collection" : {
        "additionalProperties" : false,
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "type" : {
            "default" : "REGULAR",
            "enum" : [ "REGULAR", "TIME_SERIES" ],
            "type" : "string"
          },
          "timeSeriesOptions" : {
            "$ref" : "#/components/schemas/time-series-options"
          }
        },
        "required" : [ "name" ],
        "type" : "object"
      },
      "mapping" : {
        "additionalProperties" : false,
        "properties" : {
          "settings" : {
            "$ref" : "#/components/schemas/mapping-settings"
          },
          "fields" : {
            "additionalProperties" : {
              "$ref" : "#/components/schemas/field-mapping"
            },
            "type" : "object"
          },
          "calculatedFields" : {
            "additionalProperties" : {
              "$ref" : "#/components/schemas/calculated-field-mapping"
            },
            "type" : "object"
          },
          "collectionId" : {
            "type" : "string"
          },
          "table" : {
            "type" : "string"
          }
        },
        "required" : [ "calculatedFields", "collectionId", "fields", "settings", "table" ],
        "type" : "object"
      },
      "mapping-object" : {
        "additionalProperties" : false,
        "properties" : {
          "mappings" : {
            "$ref" : "#/components/schemas/mapping-array"
          }
        },
        "required" : [ "mappings" ],
        "type" : "object"
      },
      "mapping-relationship" : {
        "additionalProperties" : false,
        "properties" : {
          "children" : {
            "$ref" : "#/components/schemas/mapping-array"
          }
        },
        "required" : [ "children" ],
        "type" : "object"
      },
      "project-diagram" : {
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "notes" : {
            "type" : "string"
          },
          "relational" : {
            "$ref" : "#/components/schemas/project-diagram-view"
          },
          "collection" : {
            "$ref" : "#/components/schemas/project-diagram-view"
          }
        },
        "required" : [ "collection", "id", "name", "relational" ],
        "type" : "object"
      },
      "project-table" : {
        "additionalProperties" : false,
        "properties" : {
          "path" : {
            "$ref" : "#/components/schemas/relational-path"
          }
        },
        "required" : [ "path" ],
        "type" : "object"
      },
      "recommendation-mapping" : {
        "additionalProperties" : false,
        "properties" : {
          "settings" : {
            "$ref" : "#/components/schemas/mapping-settings"
          },
          "collectionId" : {
            "type" : "string"
          },
          "path" : {
            "$ref" : "#/components/schemas/relational-path"
          }
        },
        "required" : [ "collectionId", "path", "settings" ],
        "type" : "object"
      },
      "schema" : {
        "additionalProperties" : false,
        "properties" : {
          "tables" : {
            "additionalProperties" : {
              "$ref" : "#/components/schemas/table"
            },
            "type" : "object"
          },
          "views" : {
            "additionalProperties" : {
              "$ref" : "#/components/schemas/schema-object"
            },
            "type" : "object"
          },
          "routines" : {
            "additionalProperties" : {
              "$ref" : "#/components/schemas/schema-object"
            },
            "type" : "object"
          },
          "triggers" : {
            "additionalProperties" : {
              "$ref" : "#/components/schemas/schema-object"
            },
            "type" : "object"
          }
        },
        "required" : [ "tables" ],
        "type" : "object"
      },
      "time-series-options" : {
        "properties" : {
          "timeField" : {
            "type" : "string"
          },
          "metaField" : {
            "type" : "string"
          },
          "expireAfterSeconds" : {
            "type" : "number"
          },
          "granularity" : {
            "enum" : [ "SECONDS", "MINUTES", "HOURS" ],
            "type" : "string"
          }
        },
        "required" : [ "granularity", "timeField" ],
        "type" : "object"
      },
      "mapping-settings" : {
        "additionalProperties" : false,
        "properties" : {
          "type" : {
            "$ref" : "#/components/schemas/mapping-type"
          },
          "notes" : {
            "type" : "string"
          },
          "embeddedPath" : {
            "type" : "string"
          },
          "primitive" : {
            "type" : "boolean"
          },
          "arrayConditions" : {
            "$ref" : "#/components/schemas/mapping-array-conditions"
          },
          "foreignKeyName" : {
            "type" : "string"
          },
          "ruleFilter" : {
            "type" : "string"
          }
        },
        "required" : [ "type" ],
        "type" : "object"
      },
      "field-mapping" : {
        "properties" : {
          "target" : {
            "$ref" : "#/components/schemas/target-field-mapping"
          },
          "source" : {
            "$ref" : "#/components/schemas/source-field-mapping"
          }
        },
        "required" : [ "source", "target" ],
        "type" : "object"
      },
      "calculated-field-mapping" : {
        "additionalProperties" : false,
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "isNullExcluded" : {
            "default" : false,
            "type" : "boolean"
          },
          "type" : {
            "$ref" : "#/components/schemas/migration-field-type"
          },
          "expression" : {
            "type" : "string"
          }
        },
        "required" : [ "expression", "name" ],
        "type" : "object"
      },
      "mapping-array" : {
        "items" : {
          "$ref" : "#/components/schemas/id"
        },
        "type" : "array"
      },
      "project-diagram-view" : {
        "properties" : {
          "nodes" : {
            "items" : {
              "$ref" : "#/components/schemas/project-diagrams-node"
            },
            "type" : "array"
          },
          "edges" : {
            "items" : {
              "$ref" : "#/components/schemas/project-diagrams-edge"
            },
            "type" : "array"
          }
        },
        "required" : [ "edges", "nodes" ],
        "type" : "object"
      },
      "table" : {
        "additionalProperties" : false,
        "properties" : {
          "type" : {
            "enum" : [ "TABLE", "VIEW" ],
            "type" : "string"
          },
          "size" : {
            "format" : "int64",
            "type" : "integer"
          },
          "columns" : {
            "additionalProperties" : {
              "$ref" : "#/components/schemas/column"
            },
            "type" : "object"
          },
          "uniqueIndexes" : {
            "additionalProperties" : {
              "items" : {
                "type" : "string"
              },
              "type" : "array"
            },
            "type" : "object"
          },
          "filter" : {
            "$ref" : "#/components/schemas/table-filter"
          }
        },
        "required" : [ "columns", "type" ],
        "type" : "object"
      },
      "schema-object" : {
        "additionalProperties" : false,
        "properties" : {
          "included" : {
            "type" : "boolean"
          },
          "name" : {
            "type" : "string"
          },
          "definition" : {
            "type" : "string"
          }
        },
        "required" : [ "definition", "included", "name" ],
        "type" : "object"
      },
      "mapping-type" : {
        "enum" : [ "NEW_DOCUMENT", "EMBEDDED_DOCUMENT", "EMBEDDED_DOCUMENT_ARRAY" ],
        "type" : "string"
      },
      "mapping-array-conditions" : {
        "additionalProperties" : false,
        "properties" : {
          "sortBy" : {
            "type" : "string"
          },
          "order" : {
            "$ref" : "#/components/schemas/sorting-order-type"
          },
          "limit" : {
            "format" : "int32",
            "type" : "integer"
          }
        },
        "required" : [ "order", "sortBy" ],
        "type" : "object"
      },
      "target-field-mapping" : {
        "additionalProperties" : false,
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "included" : {
            "type" : "boolean"
          },
          "isNullExcluded" : {
            "default" : false,
            "type" : "boolean"
          },
          "type" : {
            "$ref" : "#/components/schemas/migration-field-type"
          }
        },
        "required" : [ "included", "name", "type" ],
        "type" : "object"
      },
      "source-field-mapping" : {
        "additionalProperties" : false,
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "databaseSpecificType" : {
            "type" : "string"
          },
          "isPrimaryKey" : {
            "default" : false,
            "type" : "boolean"
          }
        },
        "required" : [ "databaseSpecificType", "name" ],
        "type" : "object"
      },
      "migration-field-type" : {
        "enum" : [ "AUTO", "STRING", "INTEGER", "BOOL", "DOUBLE", "LONG", "DECIMAL", "ARRAY", "DATE", "TIMESTAMP", "OBJECT", "OBJECT_ID", "BIN_DATA", "MIN_KEY", "MAX_KEY", "JAVASCRIPT", "REGEX", "NULL" ],
        "type" : "string"
      },
      "project-diagrams-node" : {
        "additionalProperties" : false,
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "position" : {
            "$ref" : "#/components/schemas/project_diagrams_node_position"
          },
          "width" : {
            "type" : "number"
          },
          "height" : {
            "type" : "number"
          },
          "hidden" : {
            "type" : "boolean"
          }
        },
        "required" : [ "hidden", "id", "position", "type" ],
        "type" : "object"
      },
      "project-diagrams-edge" : {
        "additionalProperties" : false,
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "source" : {
            "type" : "string"
          },
          "target" : {
            "type" : "string"
          },
          "markerStart" : {
            "enum" : [ "START_ONE", "START_ONE_OR_MANY" ],
            "type" : "string"
          },
          "markerEnd" : {
            "enum" : [ "END_ONE", "END_MANY", "END_ONE_OR_MANY" ],
            "type" : "string"
          }
        },
        "required" : [ "id", "source", "target" ],
        "type" : "object"
      },
      "column" : {
        "additionalProperties" : false,
        "properties" : {
          "type" : {
            "$ref" : "#/components/schemas/column-type"
          },
          "ordinalPosition" : {
            "minimum" : 1,
            "type" : "integer"
          },
          "primaryKey" : {
            "$ref" : "#/components/schemas/primary-key"
          },
          "foreignKey" : {
            "$ref" : "#/components/schemas/foreign-key"
          },
          "nullable" : {
            "type" : "boolean"
          },
          "autoIncremented" : {
            "type" : "boolean"
          },
          "generated" : {
            "type" : "boolean"
          },
          "hidden" : {
            "type" : "boolean"
          },
          "indexed" : {
            "type" : "boolean"
          },
          "uniqueIndexed" : {
            "type" : "boolean"
          }
        },
        "required" : [ "autoIncremented", "generated", "hidden", "indexed", "nullable", "ordinalPosition", "type", "uniqueIndexed" ],
        "type" : "object"
      },
      "sorting-order-type" : {
        "enum" : [ "ASC", "DESC" ],
        "type" : "string"
      },
      "column-type" : {
        "additionalProperties" : false,
        "properties" : {
          "databaseSpecificType" : {
            "type" : "string"
          },
          "precision" : {
            "type" : "integer"
          },
          "scale" : {
            "type" : "integer"
          }
        },
        "required" : [ "databaseSpecificType" ],
        "type" : "object"
      },
      "primary-key" : {
        "additionalProperties" : false,
        "properties" : {
          "name" : {
            "type" : "string"
          }
        },
        "required" : [ "name" ],
        "type" : "object"
      },
      "foreign-key" : {
        "additionalProperties" : false,
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "schema" : {
            "type" : "string"
          },
          "table" : {
            "type" : "string"
          },
          "column" : {
            "type" : "string"
          },
          "cardinality" : {
            "enum" : [ "UNKNOWN", "ZERO_TO_ONE", "ONE_TO_ONE", "ZERO_TO_MANY" ],
            "type" : "string"
          },
          "synthetic" : {
            "type" : "boolean"
          }
        },
        "required" : [ "name" ],
        "type" : "object"
      },
      "updateSetting_request" : {
        "properties" : {
          "value" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "cluster" : {
        "properties" : {
          "orgName" : {
            "type" : "string"
          },
          "orgId" : {
            "type" : "string"
          },
          "groupName" : {
            "type" : "string"
          },
          "groupId" : {
            "type" : "string"
          },
          "clusterName" : {
            "type" : "string"
          },
          "clusterId" : {
            "type" : "string"
          }
        },
        "required" : [ "clusterId", "clusterName", "groupId", "groupName", "orgId", "orgName" ],
        "title" : "cluster",
        "type" : "object"
      },
      "connectivity_environment_errors_inner" : {
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "exception" : {
            "type" : "string"
          },
          "resolution" : {
            "type" : "string"
          }
        },
        "required" : [ "name", "resolution" ],
        "type" : "object"
      },
      "info_build" : {
        "properties" : {
          "artifact" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "time" : {
            "type" : "string"
          },
          "version" : {
            "type" : "string"
          },
          "group" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "info_buildStatus" : {
        "properties" : {
          "latest" : {
            "type" : "boolean"
          },
          "enabled" : {
            "type" : "boolean"
          },
          "latestReleaseURL" : {
            "type" : "string"
          },
          "latestReleaseType" : {
            "type" : "string"
          },
          "latestReleaseVersion" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "info_jdbcDriversFound_value" : {
        "properties" : {
          "currentVersion" : {
            "type" : "string"
          },
          "supportedVersions" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        },
        "required" : [ "currentVersion", "supportedVersions" ],
        "type" : "object"
      },
      "info_telemetry" : {
        "properties" : {
          "enabled" : {
            "type" : "boolean"
          },
          "segmentWriteKey" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "info_authentication" : {
        "properties" : {
          "forceLoginRedirect" : {
            "type" : "boolean"
          }
        },
        "type" : "object"
      },
      "queryRunnerInfo" : {
        "properties" : {
          "status" : {
            "$ref" : "#/components/schemas/query-runner-status"
          },
          "version" : {
            "type" : "string"
          }
        },
        "required" : [ "status" ],
        "title" : "queryRunnerInfo",
        "type" : "object"
      },
      "queryConversionInfo" : {
        "properties" : {
          "isUsingByoModel" : {
            "type" : "boolean"
          },
          "queryRunner" : {
            "$ref" : "#/components/schemas/queryRunnerInfo"
          }
        },
        "required" : [ "isUsingByoModel", "queryRunner" ],
        "title" : "queryConversionInfo",
        "type" : "object"
      },
      "migration_job_status_atlasMetadata" : {
        "properties" : {
          "mongoDbProjectName" : {
            "type" : "string"
          },
          "mongoDbProjectId" : {
            "type" : "string"
          },
          "mongoDbClusterName" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "migration_job_status_metadata" : {
        "additionalProperties" : false,
        "properties" : {
          "telemetryUserId" : {
            "type" : "string"
          },
          "verificationRequested" : {
            "default" : false,
            "type" : "boolean"
          },
          "verificationStatus" : {
            "$ref" : "#/components/schemas/verification-status-enum"
          }
        },
        "type" : "object"
      },
      "ProjectDescriptorBase_connectionDetails" : {
        "properties" : {
          "jdbc" : {
            "$ref" : "#/components/schemas/jdbc-connection-details-extended"
          },
          "mongodb" : {
            "$ref" : "#/components/schemas/mongodb-connection-details-extended"
          },
          "ddl" : {
            "$ref" : "#/components/schemas/ddl-connection-details"
          }
        },
        "type" : "object"
      },
      "codegen_response_files_inner" : {
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "filetype" : {
            "$ref" : "#/components/schemas/codegen-filetype-type"
          },
          "code" : {
            "type" : "string"
          }
        },
        "required" : [ "code", "filetype", "name" ],
        "type" : "object"
      },
      "codegen_metadata_response_metadata_inner_frameworks_inner" : {
        "properties" : {
          "hasSupportFiles" : {
            "type" : "boolean"
          },
          "framework" : {
            "$ref" : "#/components/schemas/codegen-framework-type"
          }
        },
        "required" : [ "framework", "hasSupportFiles" ],
        "type" : "object"
      },
      "codegen_metadata_response_metadata_inner" : {
        "properties" : {
          "language" : {
            "$ref" : "#/components/schemas/codegen-language-type"
          },
          "frameworks" : {
            "items" : {
              "$ref" : "#/components/schemas/codegen_metadata_response_metadata_inner_frameworks_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "frameworks", "language" ],
        "type" : "object"
      },
      "queryInputPatch" : {
        "additionalProperties" : false,
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "query" : {
            "type" : "string"
          },
          "runScript" : {
            "type" : "string"
          }
        },
        "title" : "queryInputPatch",
        "type" : "object"
      },
      "queryOutputPatch" : {
        "additionalProperties" : false,
        "properties" : {
          "query" : {
            "type" : "string"
          },
          "runScript" : {
            "type" : "string"
          }
        },
        "title" : "queryOutputPatch",
        "type" : "object"
      },
      "query_run_result_source_allOf_fieldMetadataMap" : {
        "properties" : {
          "columnType" : {
            "type" : "string"
          },
          "columnIndex" : {
            "type" : "integer"
          }
        },
        "required" : [ "columnIndex", "columnType" ],
        "type" : "object"
      },
      "schema_descriptor_metadata" : {
        "properties" : {
          "databaseType" : {
            "$ref" : "#/components/schemas/database-type"
          },
          "databaseVersion" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "job_update_location" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/tableLocation"
        }, {
          "$ref" : "#/components/schemas/collectionLocation"
        }, {
          "$ref" : "#/components/schemas/documentLocation"
        } ]
      },
      "project_diagrams_node_position" : {
        "properties" : {
          "x" : {
            "type" : "number"
          },
          "y" : {
            "type" : "number"
          }
        },
        "required" : [ "x", "y" ],
        "type" : "object"
      }
    }
  }
}
