.. _rm-new-documents:

=============
New Documents
=============

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

Use this mapping rule when you want data from a table to be 
stored in a dedicated collection. Any database table can use a 
:guilabel:`New Documents` mapping rule.

The :guilabel:`New Documents` mapping rule is the most basic mapping rule option.
It creates a document for each row of data in your relational database.

About this Task
---------------

You can have multiple :guilabel:`New Documents` mapping rules from
different tables into the same collection. Relational Migrator treats
these tables as isolated data and the destination documents are not 
merged together in any way.  

Steps
-----

.. procedure::
   :style:  connected

   .. step:: Select a collection

      a. Navigate to the :guilabel:`Mapping` screen.
      #. On the :guilabel:`Schema model` pane under the 
         :guilabel:`MongoDB` header, click on a collection.
   
   .. step:: Create or edit a mapping rule
     
      a. From the :guilabel:`Mapping` screen, click :guilabel:`+ Add` 
         to create a new mapping rule or click the 
         :icon-fa5:`pencil-alt` icon to edit an existing rule.

   .. step:: (Optional) Configure mapping rule filters
      
      .. include:: /includes/fact-mapping-options-rule-filter.rst

   .. step:: Save and close

      a. Click :guilabel:`Save And Close`.

Example
-------

This section demonstrates the relational input and
the MongoDB output of the :guilabel:`New Documents` mapping rule.

New Documents
~~~~~~~~~~~~~

In this example a :guilabel:`New Documents` mapping rule is applied to a single row 
from the ``Customer`` table.


Click the tabs below to see the input and output for this example:

.. tabs::

   .. tab:: Relational Input
      :tabid: new-document-in

      ``Customer`` table:

      .. list-table::
         :header-rows: 1

         * - Id
           - Name
           - Address1
           - Address2
           - Address3
         * - 1
           - Joelynn Fawthrop
           - 86 Dwight Pass
           - Carregal
           - 3800-854

   .. tab:: MongoDB Output
      :tabid: Embedded-array-out

      The document in the ``Customer`` collection now has all the relation
      table fields.

      .. code-block:: javascript
         :copyable: false

         {  
            "_id": {    "CustomerID": 1  },
            "Name": "Joelynn Fawthrop",
            "Address1": "86 Dwight Pass",
            "Address2": "Carregal",
            "Address3": "3800-854"
         }

Learn More
----------
